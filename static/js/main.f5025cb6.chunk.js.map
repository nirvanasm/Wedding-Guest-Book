{"version":3,"sources":["main.js","App.js","reportWebVitals.js","index.js"],"names":["Child","props","state","guestName","submitted","setTextInputRef","element","textInput","e","preventDefault","this","setState","Autocomplete","id","ref","options","guestList","style","width","backgroundColor","outlineColor","renderInput","params","TextField","variant","color","onChange","event","val","Button","size","onClick","HandleSubmit","bind","display","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAgDeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACTC,UAAW,KACXC,WAAW,GAEf,EAAKC,gBAAkB,SAAAC,GACnB,EAAKC,UAAYD,GAPJ,E,yDALNE,GACXA,EAAEC,iBACFC,KAAKC,SAAS,CAACP,WAAU,Q,8CAajB,IAAD,OACP,OAAIM,KAAKR,MAAME,UAiBP,wBAfA,gCACI,cAACQ,EAAA,EAAD,CACIC,GAAG,iBACHC,IAAKJ,KAAKL,gBACVU,QAASC,EACTC,MAAO,CAAEC,MAAO,IAAKC,gBAAiB,QAASC,aAAc,WAC7DC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,QAAQ,WAAWC,MAAM,cACzEC,SAAU,SAACC,EAAOC,GAAR,OAAgB,EAAKjB,SAAS,CAAER,UAAWyB,OAEzD,uBACA,cAACC,EAAA,EAAD,CAAQL,QAAQ,YAAYM,KAAK,QAAQC,QAASrB,KAAKsB,aAAaC,KAAKvB,MAAOwB,QAAQ,SAAxF,2B,GA7BIC,IAAMC,WA4CpBpB,EAAY,CACd,UACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,QACA,YACA,SACA,OACA,SACA,UACA,YACA,SACA,MACA,UACA,QACA,UACA,QACA,QACA,wBACA,oBACA,cACA,QACA,kBACA,uBACA,6BACA,iBACA,mBACA,OACA,aACA,gBACA,eACA,mBACA,iBACA,mBACA,gBACA,mBACA,QACA,UACA,0BACA,0BC1EWqB,MAff,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,uFAGA,cAAC,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5025cb6.chunk.js","sourcesContent":["/* Child.jsx */\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\n\nclass Child extends React.Component {\n  HandleSubmit(e){\n    e.preventDefault();\n    this.setState({submitted:true})\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n        guestName: null,\n        submitted: false,\n    };\n    this.setTextInputRef = element => {\n        this.textInput = element;\n    };\n  }\n  render() {\n    if(!this.state.submitted){\n        return (\n            <div>\n                <Autocomplete\n                    id=\"combo-box-demo\"\n                    ref={this.setTextInputRef}\n                    options={guestList}\n                    style={{ width: 300, backgroundColor: 'white', outlineColor: 'primary', }}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" color=\"primary\"/>}\n                    onChange={(event, val) => this.setState({ guestName: val})}\n                />\n                <br></br>\n                <Button variant=\"contained\" size=\"large\" onClick={this.HandleSubmit.bind(this)} display=\"inline\">Submit</Button>\n            </div>\n        );\n    }else{\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n  }\n}\n\nexport default Child;\n\nconst guestList = [\n    \"Shannon\", \n    \"Karina\",\n    \"Diandra\",\n    \"Vanessa\",\n    \"Livia\",\n    \"Hans\",\n    \"Ellen\",\n    \"Anastasia\",\n    \"Felix\",\n    \"Giscielle\",\n    \"Sheena\",\n    \"Fang\",\n    \"Feifei\",\n    \"Anthony\",\n    \"Christina\",\n    \"Sharon\",\n    \"Ita\",\n    \"Hendrik\",\n    \"Angle\",\n    \"Irvandy\",\n    \"jenny\",\n    \"johan\",\n    \"Jonas Aditya Sunandar\",\n    \"Jennifer Theresia\",\n    \"Fadil Kamal\",\n    \"Della\",\n    \"Jonathan Altheo\",\n    \"Andrianson Nathanael\",\n    \"Pinandita Anggakara Singal\",\n    \"Simplicity F C\",\n    \"Andhika Alfonsus\",\n    \"Arie\",\n    \"Pacar Arie\",\n    \"Luna Fidelita\",\n    \"Meichen Dewi\",\n    \"Steffany Haryadi\",\n    \"Kevin Herklots\",\n    \"Vincent Pangestu\",\n    \"Yenny Yorisca\",\n    \"Shierlen Octavia\",\n    \"Refin\",\n    \"Mariska\",\n    \"Vanesha Natalia Ignacia\",\n    \"Stella Natalia Ignacia\",\n  ];","import './App.css';\nimport Child from './main'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Hi there! Search your name and find your table number!\n        </p>\n        <Child/>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}